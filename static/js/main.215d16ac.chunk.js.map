{"version":3,"sources":["img/logo.png","components/ui/Header.js","img/spinner.gif","components/ui/Spinner.js","components/pokemons/PokemonItem.js","components/pokemons/PokemonGrid.js","components/ui/Pagination.js","App.js","index.js"],"names":["Header","className","src","logo","alt","Spinner","spinner","style","width","margin","display","PokemonItem","pokemon","useState","pokemonDetails","setPokemonDetails","isLoadingItem","setLoadingItem","useEffect","a","axios","url","result","data","fetchPokemon","id","name","types","map","type","abilities","ab","ability","PokemonGrid","pokemons","isLoading","p","Pagination","gotoPrevPage","gotoNextPage","onClick","App","setPokemons","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","setIsLoading","results","next","previous","fetchPokemons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.215d16ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.47562f8d.png\";","import React from 'react'\r\nimport logo from '../../img/logo.png'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className='center'>\r\n            <img src={logo} alt='Logo' />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react'\r\nimport spinner from '../../img/spinner.gif'\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <img src={spinner}\r\n            style={{\r\n                width: '200px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }} alt='Loading' />\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useState, useEffect } from 'react'\r\nimport Spinner from '../ui/Spinner'\r\nimport axios from 'axios'\r\n\r\nconst PokemonItem = ({ pokemon }) => {\r\n    const [pokemonDetails, setPokemonDetails] = useState([])\r\n    const [isLoadingItem, setLoadingItem] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchPokemon = async () => {\r\n            const result = await axios(pokemon.url)\r\n            setPokemonDetails(result.data)\r\n            setLoadingItem(false)\r\n        }\r\n        fetchPokemon()\r\n    }, [])\r\n\r\n    return isLoadingItem ? (\r\n        <Spinner />\r\n    ) : (\r\n        <div className='card'>\r\n            <div className='card-inner'>\r\n                <div className='card-front'>\r\n                    <img src={`https://pokeres.bastionbot.org/images/pokemon/${pokemonDetails.id}.png`}\r\n                        alt={pokemon.name} />\r\n                </div>\r\n                <div className='card-back'>\r\n                    <h1>{pokemon.name}</h1>\r\n                    <ul>\r\n                        <li>\r\n                            <strong>#{pokemonDetails.id}</strong>\r\n                        </li>\r\n                        <li> Types:\r\n                            <ol>\r\n                                {pokemonDetails.types ?\r\n                                    pokemonDetails.types.map(type => <li key={type.type.name}>\r\n                                        <strong>- {type.type.name}</strong>\r\n                                    </li>) : 'undefined'}\r\n                            </ol>\r\n                        </li>\r\n                        <li>Abilities:\r\n                            <ol>\r\n                                {pokemonDetails.abilities ?\r\n                                    pokemonDetails.abilities.map(ab => <li key={ab.ability.name}>\r\n                                        <strong>- {ab.ability.name}</strong>\r\n                                    </li>) : 'undefined'}\r\n                            </ol>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonItem\r\n","import React from 'react'\r\nimport PokemonItem from './PokemonItem'\r\nimport Spinner from '../ui/Spinner'\r\n\r\nconst PokemonGrid = ({ pokemons, isLoading }) => {\r\n    return isLoading ? (\r\n        <Spinner />\r\n    ) : (\r\n        <section className=\"cards\">\r\n            {pokemons.map(p => (\r\n                <PokemonItem key={p.name} pokemon={p}></PokemonItem>\r\n            ))}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PokemonGrid\r\n","import React from 'react'\r\n\r\nfunction Pagination({ gotoPrevPage, gotoNextPage }) {\r\n    return (\r\n        <div className=\"container\" style={{\r\n            'text-align': 'center'\r\n        }}>\r\n            <button className={`${gotoPrevPage ? \"active btn\" : \"disabled btn-ds\"}`} onClick={gotoPrevPage}>Previous</button>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button className={`${gotoNextPage ? \"active btn\" : \"disabled btn-ds\"}`} onClick={gotoNextPage}>Next</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Header from './components/ui/Header'\nimport PokemonGrid from './components/pokemons/PokemonGrid'\nimport './App.css';\nimport Pagination from './components/ui/Pagination';\n\nconst App = () => {\n  const [pokemons, setPokemons] = useState([])\n  const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/\")\n  const [nextPageUrl, setNextPageUrl] = useState()\n  const [prevPageUrl, setPrevPageUrl] = useState()\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    setIsLoading(true)\n    const fetchPokemons = async () => {\n      const result = await axios(currentPageUrl)\n\n      setPokemons(result.data.results)\n      setNextPageUrl(result.data.next)\n      setPrevPageUrl(result.data.previous)\n      setIsLoading(false)\n    }\n\n    fetchPokemons()\n  }, [currentPageUrl])\n\n  function gotoNextPage() {\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  function gotoPrevPage() {\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Pagination\n        gotoNextPage={nextPageUrl ? gotoNextPage : null}\n        gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\n      />\n      <PokemonGrid isLoading={isLoading} pokemons={pokemons} />\n      <Pagination\n        gotoNextPage={nextPageUrl ? gotoNextPage : null}\n        gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}